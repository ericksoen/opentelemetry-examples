version: "2"
services:
  proxy:
    build:
      context: .
    ports:
      - "5001:5000"
    depends_on:
      - downstream-dotnet
      - downstream-python
    environment:
      - OTLP_HTTP_TARGET=http://gateway:4318
      - DOWNSTREAM_PYTHON_TARGET=http://downstream-python:5000/sample
      - DOWNSTREAM_DOTNET_TARGET=http://downstream-dotnet:8080/weatherforecast
      - FLASK_APP=proxy
  downstream-python:
    build:
      context: .
    ports:
      - "5000:5000"
    depends_on:
      - agent
    environment:
      - OTLP_TARGET=http://agent:4317
      - FLASK_APP=app
  downstream-dotnet:
    build: 
      context: ./dotnet/
    environment:
      - LISTEN_ADDRESS=0.0.0.0:8080
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://agent:4318/v1/traces
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8080:8080"
    depends_on:
      - agent
  agent:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-config.yaml", "--log-level=INFO"]
    ports:
      - "4317:4137"
      # Avoid port collission on the OTLP HTTP default port
      # The dotnet OpenTelemetry SDK doesn't consistently
      # return success for gRPC calls
      - "4320:4318"
      - "8888:8888"      
      - "13133:13133"
      - "55679:55679"
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-config.yaml
    depends_on: 
      - gateway
  gateway:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-config.yaml", "--log-level=DEBUG"]
    ports:
      - "4318:4318"
      # For reasons that are not obvious to me, host:port remappings for
      # gRPC telemetry only worked when the ports mapped are identical 
      - "7134:7134"
      - "8889:8888"
      - "13134:13133"
      - "55680:55679"
    volumes:
      - ./otel-gateway-config.yaml:/etc/otel-config.yaml
    depends_on:
      - jaeger
  jaeger:
    image: jaegertracing/all-in-one
    command: ["--log-level=ERROR"]
    ports:
      - "14250:14250"
      - "16686:16686"
